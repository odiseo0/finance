from typing import Any, TypeVar

_T = TypeVar("_T")

# Define sentinel type classes
class MISSING_TYPE: ...
class EMPTY_TYPE: ...

# Define sentinel instances
MISSING: MISSING_TYPE
EMPTY: EMPTY_TYPE

class Sentinel:
    def __new__(cls, name: str, module_name: str = None) -> Any: ...
    def __repr__(self) -> str: ...
    def __str__(self) -> str: ...
    def __bool__(self) -> bool: ...
    def __hash__(self) -> int: ...
    def __eq__(self, other: object) -> bool: ...

# Type helpers for working with sentinels
def is_missing(obj: Any) -> bool: ...
def is_empty(obj: Any) -> bool: ...
